apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: virtualmachines.proxmox.alperen.cloud
spec:
  group: proxmox.alperen.cloud
  names:
    kind: VirtualMachine
    listKind: VirtualMachineList
    plural: virtualmachines
    shortNames:
    - vm
    singular: virtualmachine
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The node name
      jsonPath: .spec.nodeName
      name: Node
      type: string
    - description: The ID of the VM
      jsonPath: .status.status.id
      name: ID
      type: integer
    - description: The state of the VM
      jsonPath: .status.status.state
      name: State
      type: string
    - description: The uptime of the VM
      jsonPath: .status.status.uptime
      name: Uptime
      type: string
    - description: The IP address of the VM
      jsonPath: .status.status.IPAddress
      name: IP Address
      type: string
    - description: The OS information of the VM
      jsonPath: .status.status.OSInfo
      name: OS Info
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualMachine is the Schema for the virtualmachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          ownerReferences:
            items:
              description: |-
                OwnerReference contains enough information to let you identify an owning
                object. An owning object must be in the same namespace as the dependent, or
                be cluster-scoped, so there is no namespace field.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                blockOwnerDeletion:
                  description: |-
                    If true, AND if the owner has the "foregroundDeletion" finalizer, then
                    the owner cannot be deleted from the key-value store until this
                    reference is removed.
                    See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                    for how the garbage collector interacts with this field and enforces the foreground deletion.
                    Defaults to false.
                    To set this field, a user needs "delete" permission of the owner,
                    otherwise 422 (Unprocessable Entity) will be returned.
                  type: boolean
                controller:
                  description: If true, this reference points to the managing controller.
                  type: boolean
                kind:
                  description: |-
                    Kind of the referent.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                name:
                  description: |-
                    Name of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                  type: string
                uid:
                  description: |-
                    UID of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                  type: string
              required:
              - apiVersion
              - kind
              - name
              - uid
              type: object
              x-kubernetes-map-type: atomic
            type: array
          spec:
            description: VirtualMachineSpec defines the desired state of VirtualMachine
            properties:
              additionalConfig:
                additionalProperties:
                  type: string
                description: AdditionalConfig is the additional configuration of the
                  VM
                type: object
              connectionRef:
                description: |-
                  LocalObjectReference contains enough information to let you locate the
                  referenced object inside the same namespace.
                properties:
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: ConnectionRef is immutable
                  rule: self == oldSelf
              deletionProtection:
                default: false
                description: |-
                  DeletionProtection is a flag that indicates whether the VM should be protected from deletion.
                  If true, the VM will not be deleted when the Kubernetes resource is deleted.
                  If not set, it defaults to false.
                type: boolean
              enableAutoStart:
                default: true
                description: |-
                  EnableAutoStart is a flag that indicates whether the VM should automatically start when it's powered off.
                  If true, the VM will start automatically when it's powered off.
                  If not set, it defaults to true.
                type: boolean
              name:
                description: Name is the name of the VM
                type: string
              nodeName:
                description: NodeName is the name of the target node of Proxmox
                type: string
              template:
                description: TemplateSpec of the source VM
                properties:
                  cores:
                    description: Cores is the number of CPU cores
                    type: integer
                  disk:
                    description: Disks is the list of disks
                    items:
                      properties:
                        device:
                          description: Device is the name of the device
                          type: string
                        size:
                          description: Size is the size of the disk in GB
                          type: integer
                        storage:
                          description: Storage is the name of the storage
                          type: string
                      required:
                      - device
                      - size
                      - storage
                      type: object
                    type: array
                  memory:
                    description: Memory is the amount of memory in MB
                    type: integer
                  name:
                    description: Name of the template
                    type: string
                  network:
                    description: Networks is the list of networks
                    items:
                      properties:
                        bridge:
                          description: Bridge is the name of the bridge
                          type: string
                        model:
                          description: Model is the model of the network card
                          type: string
                      required:
                      - bridge
                      - model
                      type: object
                    type: array
                  pciDevices:
                    description: PCI is the list of PCI devices
                    items:
                      properties:
                        deviceID:
                          description: DeviceID is the ID hex id of the device
                          type: string
                        pcie:
                          default: false
                          description: PCIE is the flag that indicates whether the
                            device is a PCIE device ==> pcie=1
                          type: boolean
                        primaryGPU:
                          default: false
                          description: PrimaryGPU is the flag that indicates whether
                            the device is the primary GPU ==> x-vga=1
                          type: boolean
                        type:
                          description: Type is the type of the PCI device either raw
                            or mapped
                          enum:
                          - raw
                          - mapped
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  socket:
                    description: Socket is the number of CPU sockets
                    type: integer
                type: object
              vmSpec:
                description: This field should be modified further
                properties:
                  cloudInitConfig:
                    description: Cloud Init Config
                    properties:
                      custom:
                        description: Custom fields for cloud-init
                        properties:
                          metaData:
                            type: string
                          networkData:
                            type: string
                          userData:
                            type: string
                          vendorData:
                            type: string
                        type: object
                      dnsDomain:
                        description: DNS Domain
                        type: string
                      dnsServers:
                        description: DNS Servers
                        items:
                          type: string
                        type: array
                      ipConfig:
                        description: IPConfig is the IP configuration for the VM
                        properties:
                          cidr:
                            description: Subnet Mask
                            type: string
                          gateway:
                            description: Gateway
                            type: string
                          gatewayIPv6:
                            description: GatewayIPv6
                            type: string
                          ip:
                            description: IP Address
                            type: string
                          ipv6:
                            description: IPv6 Address
                            type: string
                        type: object
                      password:
                        description: |-
                          Password is the password for the template.
                          Use this field to specify the password directly.
                        type: string
                      passwordFrom:
                        description: |-
                          PasswordFrom is a reference to a key in a Secret that contains the password.
                          Use this field to specify the password via a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      sshKeys:
                        description: SSH Keys -- suppose to be on openSSH format
                        items:
                          type: string
                        type: array
                      upgradePackages:
                        default: true
                        description: Upgrade Packages
                        type: boolean
                      user:
                        description: User is the user name for the template
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: Specify either password or passwordFrom, but not both
                      rule: (has(self.password) && !has(self.passwordFrom)) || (!has(self.password)
                        && has(self.passwordFrom)) || (!has(self.password) && !has(self.passwordFrom))
                  cores:
                    description: Cores is the number of CPU cores
                    type: integer
                  disk:
                    description: Disks is the list of disks
                    items:
                      properties:
                        device:
                          description: Device is the name of the device
                          type: string
                        size:
                          description: Size is the size of the disk in GB
                          type: integer
                        storage:
                          description: Storage is the name of the storage
                          type: string
                      required:
                      - device
                      - size
                      - storage
                      type: object
                    type: array
                  memory:
                    description: Memory is the amount of memory in MB
                    type: integer
                  network:
                    description: Networks is the list of networks
                    items:
                      properties:
                        bridge:
                          description: Bridge is the name of the bridge
                          type: string
                        model:
                          description: Model is the model of the network card
                          type: string
                      required:
                      - bridge
                      - model
                      type: object
                    type: array
                  osImage:
                    description: OS Image
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    type: object
                  pciDevices:
                    description: PCI is the list of PCI devices
                    items:
                      properties:
                        deviceID:
                          description: DeviceID is the ID hex id of the device
                          type: string
                        pcie:
                          default: false
                          description: PCIE is the flag that indicates whether the
                            device is a PCIE device ==> pcie=1
                          type: boolean
                        primaryGPU:
                          default: false
                          description: PrimaryGPU is the flag that indicates whether
                            the device is the primary GPU ==> x-vga=1
                          type: boolean
                        type:
                          description: Type is the type of the PCI device either raw
                            or mapped
                          enum:
                          - raw
                          - mapped
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  socket:
                    description: Socket is the number of CPU sockets
                    type: integer
                type: object
            required:
            - name
            - nodeName
            type: object
          status:
            description: VirtualMachineStatus defines the observed state of VirtualMachine
            properties:
              conditions:
                description: Conditions is the metav1.Condition of the Virtual Machine
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              status:
                description: Status is the QEMU status of the Virtual Machine (state,
                  node, uptime, id, IP address, os info)
                properties:
                  IPAddress:
                    description: IPAddress is the IP address of the VM
                    type: string
                  OSInfo:
                    description: OSInfo is the OS information of the VM
                    type: string
                  id:
                    description: ID is the ID of the VM
                    type: integer
                  node:
                    description: Node is the name of the node
                    type: string
                  state:
                    description: State is the state of the VM
                    type: string
                  uptime:
                    description: Uptime is the uptime of the VM
                    type: string
                required:
                - IPAddress
                - OSInfo
                - id
                - node
                - state
                - uptime
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}